import sqlite3
from datetime import datetime
import random
from vk_api.utils import get_random_id
from utils import extract_user_id

def cmd_slots(vk, event, args):
    """–ò–≥—Ä–∞ –≤ —Å–ª–æ—Ç—ã"""
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É"
    
    try:
        bet = int(args[0])
        if bet < 1:
            return "‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 1 –º–æ–Ω–µ—Ç–∞"
        
        user_id = event.obj.message['from_id']
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        c.execute('SELECT balance FROM users WHERE user_id = ?', (user_id,))
        balance = c.fetchone()
        
        if not balance or balance[0] < bet:
            return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç"
        
        # –°–∏–º–≤–æ–ª—ã –¥–ª—è —Å–ª–æ—Ç–æ–≤
        symbols = ['üçé', 'üçã', 'üçí', '7Ô∏è‚É£', 'üíé']
        weights = [0.4, 0.3, 0.15, 0.1, 0.05]  # –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—ã–ø–∞–¥–µ–Ω–∏—è
        
        # –ö—Ä—É—Ç–∏–º —Å–ª–æ—Ç—ã
        result = random.choices(symbols, weights=weights, k=3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
        if result[0] == result[1] == result[2]:
            multiplier = {
                'üçé': 2,
                'üçã': 3,
                'üçí': 5,
                '7Ô∏è‚É£': 10,
                'üíé': 20
            }[result[0]]
            win = bet * multiplier
            message = f"üé∞ {' '.join(result)}\nüí∞ –í—ã–∏–≥—Ä—ã—à: {win} –º–æ–Ω–µ—Ç (x{multiplier})"
        else:
            win = -bet
            message = f"üé∞ {' '.join(result)}\nüí∏ –ü—Ä–æ–∏–≥—Ä—ã—à: {bet} –º–æ–Ω–µ—Ç"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        c.execute('UPDATE users SET balance = balance + ? WHERE user_id = ?',
                 (win, user_id))
        
        conn.commit()
        conn.close()
        
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_duel(vk, event, args):
    """–î—É—ç–ª—å –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏"""
    if len(args) < 2:
        return "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /duel [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [—Å—Ç–∞–≤–∫–∞]"
    
    try:
        target = args[0]
        bet = int(args[1])
        user_id = event.obj.message['from_id']
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        opponent_id = extract_user_id(vk, target)
        if not opponent_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        if bet < 1:
            return "‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 1 –º–æ–Ω–µ—Ç–∞"
        if user_id == opponent_id:
            return "‚ùå –ù–µ–ª—å–∑—è –¥—Ä–∞—Ç—å—Å—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å—ã –æ–±–æ–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
        c.execute('SELECT balance FROM users WHERE user_id IN (?, ?)',
                 (user_id, opponent_id))
        balances = c.fetchall()
        
        if len(balances) != 2 or any(b[0] < bet for b in balances):
            return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç —É –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        winner_id = random.choice([user_id, opponent_id])
        loser_id = opponent_id if winner_id == user_id else user_id
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã
        c.execute('UPDATE users SET balance = balance + ? WHERE user_id = ?',
                 (bet, winner_id))
        c.execute('UPDATE users SET balance = balance - ? WHERE user_id = ?',
                 (bet, loser_id))
        
        conn.commit()
        conn.close()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        users_info = vk.users.get(user_ids=[winner_id, loser_id])
        winner_info = next(u for u in users_info if u['id'] == winner_id)
        loser_info = next(u for u in users_info if u['id'] == loser_id)
        
        return (f"‚öîÔ∏è –î—É—ç–ª—å!\n"
                f"üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: @id{winner_id} ({winner_info['first_name']})\n"
                f"üò¢ –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–π: @id{loser_id} ({loser_info['first_name']})\n"
                f"üí∞ –í—ã–∏–≥—Ä—ã—à: {bet} –º–æ–Ω–µ—Ç")
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_wheel(vk, event, args):
    """–ö–æ–ª–µ—Å–æ —Ñ–æ—Ä—Ç—É–Ω—ã"""
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∏ —Ü–≤–µ—Ç (red/black/green)"
    
    try:
        bet = int(args[0])
        color = args[1].lower() if len(args) > 1 else None
        
        if bet < 1:
            return "‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 1 –º–æ–Ω–µ—Ç–∞"
        if color not in ['red', 'black', 'green']:
            return "‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç: red, black –∏–ª–∏ green"
        
        user_id = event.obj.message['from_id']
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        c.execute('SELECT balance FROM users WHERE user_id = ?', (user_id,))
        balance = c.fetchone()
        
        if not balance or balance[0] < bet:
            return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = random.choices(['red', 'black', 'green'], weights=[0.45, 0.45, 0.1])[0]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
        if result == color:
            multiplier = 14 if color == 'green' else 2
            win = bet * multiplier
            message = f"üé° –í—ã–ø–∞–ª–æ: {result}\nüí∞ –í—ã–∏–≥—Ä—ã—à: {win} –º–æ–Ω–µ—Ç (x{multiplier})"
        else:
            win = -bet
            message = f"üé° –í—ã–ø–∞–ª–æ: {result}\nüí∏ –ü—Ä–æ–∏–≥—Ä—ã—à: {bet} –º–æ–Ω–µ—Ç"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        c.execute('UPDATE users SET balance = balance + ? WHERE user_id = ?',
                 (win, user_id))
        
        conn.commit()
        conn.close()
        
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_flip(vk, event, args):
    """–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç–∫–∏"""
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∏ —Å—Ç–æ—Ä–æ–Ω—É (heads/tails)"
    
    try:
        bet = int(args[0])
        side = args[1].lower() if len(args) > 1 else None
        
        if bet < 1:
            return "‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 1 –º–æ–Ω–µ—Ç–∞"
        if side not in ['heads', 'tails']:
            return "‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ—Ä–æ–Ω—É: heads –∏–ª–∏ tails"
        
        user_id = event.obj.message['from_id']
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        c.execute('SELECT balance FROM users WHERE user_id = ?', (user_id,))
        balance = c.fetchone()
        
        if not balance or balance[0] < bet:
            return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç"
        
        # –ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ–º –º–æ–Ω–µ—Ç–∫—É
        result = random.choice(['heads', 'tails'])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
        if result == side:
            win = bet
            message = f"üé≤ –í—ã–ø–∞–ª–æ: {result}\nüí∞ –í—ã–∏–≥—Ä—ã—à: {win} –º–æ–Ω–µ—Ç"
        else:
            win = -bet
            message = f"üé≤ –í—ã–ø–∞–ª–æ: {result}\nüí∏ –ü—Ä–æ–∏–≥—Ä—ã—à: {bet} –º–æ–Ω–µ—Ç"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        c.execute('UPDATE users SET balance = balance + ? WHERE user_id = ?',
                 (win, user_id))
        
        conn.commit()
        conn.close()
        
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}" 