import sqlite3
from datetime import datetime, timedelta
from vk_api.utils import get_random_id
from utils import get_chat_stats, parse_duration, format_duration, extract_user_id

def cmd_skick(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω—É"
    
    try:
        target = args[0]
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            
        reason = ' '.join(args[1:]) if len(args) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('SELECT chat_id FROM bot_chats')
        chats = c.fetchall()
        conn.close()
        
        kick_count = 0
        for chat_id in chats:
            try:
                vk.messages.removeChatUser(
                    chat_id=chat_id[0],
                    user_id=user_id
                )
                kick_count += 1
            except:
                continue
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ {kick_count} –±–µ—Å–µ–¥\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_quiet(vk, event, args):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º —Ç–∏—à–∏–Ω—ã –≤ –±–µ—Å–µ–¥–µ"""
    conn = None
    try:
        duration = None
        if args:
            try:
                duration = parse_duration(args[0])
                if duration == 0:
                    return "‚ö†Ô∏è –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0"
            except:
                return "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: 30m, 1h, 2h30m –∏ —Ç.–¥."
        
        conn = sqlite3.connect('bot.db', timeout=20)
        c = conn.cursor()
        
        c.execute('SELECT quiet_mode, quiet_end FROM chat_settings WHERE chat_id = ?', (event.chat_id,))
        result = c.fetchone()
        
        if result is None:
            c.execute('INSERT INTO chat_settings (chat_id, quiet_mode, quiet_end) VALUES (?, 1, ?)', 
                     (event.chat_id, datetime.now() + timedelta(seconds=duration) if duration else None))
            new_mode = True
        else:
            current_mode, current_end = result
            new_mode = not current_mode
            if new_mode and duration:
                end_time = datetime.now() + timedelta(seconds=duration)
                c.execute('UPDATE chat_settings SET quiet_mode = ?, quiet_end = ? WHERE chat_id = ?', 
                         (1, end_time, event.chat_id))
            else:
                c.execute('UPDATE chat_settings SET quiet_mode = ?, quiet_end = NULL WHERE chat_id = ?', 
                         (int(new_mode), event.chat_id))
        
        conn.commit()
        
        if duration and new_mode:
            duration_str = format_duration(duration)
            message = f"ü§´ –†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –≤–∫–ª—é—á–µ–Ω –Ω–∞ {duration_str}\n–í —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥—É—Ç —É–¥–∞–ª—è—Ç—å—Å—è."
        else:
            message = f"{'ü§´ –†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –≤–∫–ª—é—á–µ–Ω. –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—É–¥—É—Ç —É–¥–∞–ª—è—Ç—å—Å—è.' if new_mode else 'üîä –†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –≤—ã–∫–ª—é—á–µ–Ω.'}"
        
        return message
        
    except sqlite3.Error as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {str(e)}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
    finally:
        if conn:
            try:
                conn.close()
            except:
                pass

def cmd_sban(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω—É"
    
    try:
        target = args[0]
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            
        reason = ' '.join(args[1:]) if len(args) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('SELECT chat_id FROM bot_chats')
        chats = c.fetchall()
        
        ban_time = datetime.now()
        for chat_id in chats:
            c.execute('''INSERT OR REPLACE INTO bans (user_id, chat_id, ban_time)
                        VALUES (?, ?, ?)''', (user_id, chat_id[0], ban_time))
            try:
                vk.messages.removeChatUser(
                    chat_id=chat_id[0],
                    user_id=user_id
                )
            except:
                continue
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_sunban(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    try:
        target = ' '.join(args)
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('DELETE FROM bans WHERE user_id = ?', (user_id,))
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_addsenmoder(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    try:
        target = ' '.join(args)
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''INSERT OR REPLACE INTO users (user_id, role)
                    VALUES (?, 'senior_moderator')''', (user_id,))
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id{user_id} ({user_info['first_name']}) –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å —Å—Ç–∞—Ä—à–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_bug(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–∞–≥–∞"
    
    try:
        bug_description = ' '.join(args)
        reporter_id = event.obj.message['from_id']
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''INSERT INTO bug_reports (reporter_id, description, report_time)
                    VALUES (?, ?, ?)''', (reporter_id, bug_description, datetime.now()))
        
        conn.commit()
        conn.close()
        
        dev_chat_id = 1  # Replace with actual developer chat ID
        vk.messages.send(
            chat_id=dev_chat_id,
            message=f"üêõ –ù–æ–≤—ã–π –±–∞–≥ —Ä–µ–ø–æ—Ä—Ç –æ—Ç @id{reporter_id}:\n{bug_description}",
            random_id=get_random_id()
        )
        
        return "‚úÖ –ë–∞–≥ —Ä–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_stats_chat(vk, event):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ—Å–µ–¥—ã"""
    try:
        stats = get_chat_stats(vk, event.chat_id)
        if not stats:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–µ—Å–µ–¥—ã"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã
        c.execute('SELECT quiet_mode, welcome_message FROM chat_settings WHERE chat_id = ?', 
                 (event.chat_id,))
        settings = c.fetchone() or (0, None)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–Ω–æ–≤ –≤ –±–µ—Å–µ–¥–µ
        c.execute('''SELECT COUNT(*) FROM warn_history 
                    WHERE user_id IN (
                        SELECT user_id FROM users 
                        WHERE warnings > 0
                    )''')
        warns_count = c.fetchone()[0]
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–≤ –≤ –±–µ—Å–µ–¥–µ
        c.execute('SELECT COUNT(*) FROM bans WHERE chat_id = ?', (event.chat_id,))
        bans_count = c.fetchone()[0]
        
        conn.close()
        
        message = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ—Å–µ–¥—ã:\n\n"
        message += f"üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {stats['total_members']}\n"
        message += f"üü¢ –û–Ω–ª–∞–π–Ω: {stats['online_count']}\n"
        message += f"üëÆ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {stats['admins_count']}\n"
        message += f"‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {warns_count}\n"
        message += f"üö´ –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–æ–≤: {bans_count}\n"
        message += f"ü§´ –†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã: {'–í–∫–ª—é—á–µ–Ω' if settings[0] else '–í—ã–∫–ª—é—á–µ–Ω'}\n"
        if settings[1]:
            message += f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\n"
        
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_settings(vk, event, args):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–µ—Å–µ–¥—ã"""
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ –∑–Ω–∞—á–µ–Ω–∏–µ"
    
    try:
        param = args[0].lower()
        value = ' '.join(args[1:]) if len(args) > 1 else None
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        if param == 'welcome':
            if not value:
                return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"
            c.execute('''INSERT OR REPLACE INTO chat_settings (chat_id, welcome_message)
                        VALUES (?, ?)''', (event.chat_id, value))
            message = "‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        
        elif param == 'autowarn':
            enabled = value == 'on'
            c.execute('''INSERT OR REPLACE INTO chat_settings (chat_id, auto_warn)
                        VALUES (?, ?)''', (event.chat_id, int(enabled)))
            message = f"‚úÖ –ê–≤—Ç–æ–≤–∞—Ä–Ω {'–≤–∫–ª—é—á–µ–Ω' if enabled else '–≤—ã–∫–ª—é—á–µ–Ω'}"
        
        elif param == 'maxwarns':
            try:
                max_warns = int(value)
                if max_warns < 1 or max_warns > 10:
                    return "‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 10"
                c.execute('''INSERT OR REPLACE INTO chat_settings (chat_id, max_warnings)
                            VALUES (?, ?)''', (event.chat_id, max_warns))
                message = f"‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {max_warns}"
            except:
                return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π"
        
        else:
            return "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: welcome, autowarn, maxwarns"
        
        conn.commit()
        conn.close()
        
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}" 