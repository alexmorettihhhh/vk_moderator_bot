import sqlite3
from datetime import datetime
from vk_api.utils import get_random_id
from utils import extract_user_id

def cmd_ban(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω—É"
    
    try:
        target = args[0]
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            
        reason = ' '.join(args[1:]) if len(args) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        chat_id = event.chat_id
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''INSERT INTO bans (user_id, chat_id, ban_time)
                    VALUES (?, ?, ?)''', (user_id, chat_id, datetime.now()))
        
        conn.commit()
        conn.close()
        
        # Kick user from chat
        vk.messages.removeChatUser(
            chat_id=chat_id,
            user_id=user_id
        )
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_unban(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    try:
        target = ' '.join(args)
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            
        chat_id = event.chat_id
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        c.execute('SELECT ban_time FROM bans WHERE user_id = ? AND chat_id = ?', (user_id, chat_id))
        ban = c.fetchone()
        
        if not ban:
            conn.close()
            user_info = vk.users.get(user_ids=[user_id])[0]
            return f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–∞–Ω–µ"
        
        c.execute('''DELETE FROM bans 
                    WHERE user_id = ? AND chat_id = ?''', (user_id, chat_id))
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_addmoder(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    try:
        target = ' '.join(args)
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''INSERT OR REPLACE INTO users (user_id, role)
                    VALUES (?, 'moderator')''', (user_id,))
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @id{user_id} ({user_info['first_name']}) –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_removerole(vk, event, args):
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    try:
        target = ' '.join(args)
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''UPDATE users 
                    SET role = 'user' 
                    WHERE user_id = ?''', (user_id,))
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @id{user_id} ({user_info['first_name']}) –∑–∞–±—Ä–∞–Ω–∞ —Ä–æ–ª—å"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_zov(vk, event):
    try:
        chat_members = vk.messages.getConversationMembers(
            peer_id=2000000000 + event.chat_id
        )
        
        mentions = []
        for member in chat_members['profiles']:
            mentions.append(f"@id{member['id']} ({member['first_name']})")
        
        return "üîî –í—Å–µ–æ–±—â–∏–π –ø—Ä–∏–∑—ã–≤!\n" + ", ".join(mentions)
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_online(vk, event):
    try:
        chat_members = vk.messages.getConversationMembers(
            peer_id=2000000000 + event.chat_id
        )
        
        online_members = []
        for member in chat_members['profiles']:
            if member.get('online', 0) == 1:
                online_members.append(f"@id{member['id']} ({member['first_name']})")
        
        if not online_members:
            return "üò¥ –°–µ–π—á–∞—Å –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç –æ–Ω–ª–∞–π–Ω"
        
        return "üü¢ –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω:\n" + ", ".join(online_members)
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_banlist(vk, event):
    try:
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''SELECT user_id, ban_time 
                    FROM bans 
                    WHERE chat_id = ? 
                    ORDER BY ban_time DESC''', (event.chat_id,))
        bans = c.fetchall()
        conn.close()
        
        if not bans:
            return "‚úÖ –í —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –Ω–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        message = "üìã –°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
        for user_id, ban_time in bans:
            message += f"‚Ä¢ {user_id}: —Å {ban_time}\n"
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_onlinelist(vk, event):
    try:
        chat_members = vk.messages.getConversationMembers(
            peer_id=2000000000 + event.chat_id
        )
        
        online_count = 0
        message = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–ª–∞–π–Ω–∞:\n"
        
        for member in chat_members['profiles']:
            status = "üü¢" if member.get('online', 0) == 1 else "‚ö´"
            message += f"{status} @id{member['id']} ({member['first_name']})\n"
            if member.get('online', 0) == 1:
                online_count += 1
        
        message += f"\n–í—Å–µ–≥–æ –æ–Ω–ª–∞–π–Ω: {online_count}/{len(chat_members['profiles'])}"
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}" 