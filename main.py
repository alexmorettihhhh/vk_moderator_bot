import os
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.utils import get_random_id
from dotenv import load_dotenv
from datetime import datetime, timedelta
import sqlite3
import json
import threading
from fun_commands import (
    cmd_profile, cmd_daily, cmd_marry, cmd_divorce,
    cmd_rep, cmd_game, cmd_top, cmd_nickname, cmd_achievements,
    cmd_give
)
from games import (
    cmd_slots, cmd_duel, cmd_wheel, cmd_flip, cmd_dice,
    cmd_russian_roulette, cmd_blackjack, cmd_lottery, cmd_numbers,
    cmd_jackpot, cmd_poker, cmd_tournament, cmd_baccarat,
    cmd_crash, cmd_mines
)
from utils import get_weather, get_currency_rates, extract_user_id, get_vk_reg_date
from admin_commands import (
    cmd_skick, cmd_quiet, cmd_sban, cmd_sunban,
    cmd_addsenmoder, cmd_bug, cmd_stats_chat, cmd_settings,
    cmd_addadmin, cmd_removeadmin, cmd_massban, cmd_unbanall,
    cmd_clear_warns, cmd_reset_stats, cmd_admin_list, cmd_givemoney
)
from moderator_commands import (
    cmd_mute, cmd_unmute, cmd_warn, cmd_unwarn,
    cmd_getban, cmd_getwarn, cmd_warnhistory, cmd_staff
)
from senior_moderator_commands import (
    cmd_ban, cmd_unban, cmd_addmoder, cmd_removerole,
    cmd_zov, cmd_online, cmd_banlist, cmd_onlinelist
)
from logger import setup_logger, setup_command_logger, log_command, log_error
from backup import create_backup
from antispam import antispam
from cleanup import schedule_cleanup
from db_update import update_database, adapt_datetime, convert_datetime
import time
import sys
from requests.exceptions import ConnectionError, ReadTimeout
from image_generator import generate_stats_image
from admin_utils import (
    cmd_filter, cmd_pin, cmd_export,
    cmd_welcome, cmd_backup, cmd_automod
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–æ–≤
logger = setup_logger()
cmd_logger = setup_command_logger()

# Load environment variables
load_dotenv()

# VK Bot configuration
TOKEN = os.getenv('VK_TOKEN')
GROUP_ID = int(os.getenv('GROUP_ID'))

# Initialize SQLite adapters
sqlite3.register_adapter(datetime, adapt_datetime)
sqlite3.register_converter("TIMESTAMP", convert_datetime)

# Initialize VK session
def init_vk():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK —Å–µ—Å—Å–∏–∏"""
    vk_session = vk_api.VkApi(token=TOKEN)
    vk = vk_session.get_api()
    longpoll = VkBotLongPoll(vk_session, GROUP_ID)
    return vk_session, vk, longpoll

# Database initialization
def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        c.execute('''CREATE TABLE IF NOT EXISTS users
                    (user_id INTEGER PRIMARY KEY,
                     role TEXT DEFAULT 'user',
                     messages_count INTEGER DEFAULT 0,
                     level INTEGER DEFAULT 1,
                     xp INTEGER DEFAULT 0,
                     balance INTEGER DEFAULT 0,
                     reputation INTEGER DEFAULT 0,
                     warnings INTEGER DEFAULT 0,
                     is_muted INTEGER DEFAULT 0,
                     mute_end TIMESTAMP,
                     last_daily TIMESTAMP,
                     nickname TEXT,
                     reg_date TIMESTAMP,
                     invited_count INTEGER DEFAULT 0,
                     last_activity TIMESTAMP)''')

        c.execute('''CREATE TABLE IF NOT EXISTS marriages
                    (user1_id INTEGER,
                     user2_id INTEGER,
                     marriage_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                     FOREIGN KEY (user1_id) REFERENCES users(user_id),
                     FOREIGN KEY (user2_id) REFERENCES users(user_id),
                     PRIMARY KEY (user1_id, user2_id))''')

        c.execute('''CREATE TABLE IF NOT EXISTS bans
                    (user_id INTEGER,
                     chat_id INTEGER,
                     ban_time TIMESTAMP,
                     PRIMARY KEY (user_id, chat_id))''')

        c.execute('''CREATE TABLE IF NOT EXISTS warn_history
                    (id INTEGER PRIMARY KEY AUTOINCREMENT,
                     user_id INTEGER,
                     warned_by INTEGER,
                     reason TEXT,
                     timestamp TIMESTAMP)''')

        c.execute('''CREATE TABLE IF NOT EXISTS message_history
                    (id INTEGER PRIMARY KEY AUTOINCREMENT,
                     user_id INTEGER,
                     chat_id INTEGER,
                     message_type TEXT,
                     timestamp TIMESTAMP)''')

        c.execute('''CREATE TABLE IF NOT EXISTS chat_settings
                    (chat_id INTEGER PRIMARY KEY,
                     quiet_mode INTEGER DEFAULT 0,
                     quiet_end TIMESTAMP,
                     welcome_message TEXT,
                     auto_warn INTEGER DEFAULT 0,
                     max_warnings INTEGER DEFAULT 3)''')

        c.execute('''CREATE TABLE IF NOT EXISTS bot_chats
                    (chat_id INTEGER PRIMARY KEY,
                     join_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                     is_active INTEGER DEFAULT 1)''')
                     
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        c.execute('SELECT COUNT(*) FROM users')
        user_count = c.fetchone()[0]
        
        # –ï—Å–ª–∏ –±–∞–∑–∞ –ø—É—Å—Ç–∞, —Å–ª–µ–¥—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –∞–¥–º–∏–Ω–æ–º
        if user_count == 0:
            logger.info("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞. –°–ª–µ–¥—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
            c.execute('INSERT OR REPLACE INTO users (user_id, role, reg_date) VALUES (?, ?, ?)', 
                     (694099447, 'admin', datetime.now()))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É reg_date, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        try:
            c.execute('ALTER TABLE users ADD COLUMN reg_date TIMESTAMP')
        except sqlite3.OperationalError:
            pass  # –ö–æ–ª–æ–Ω–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É invited_count, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        try:
            c.execute('ALTER TABLE users ADD COLUMN invited_count INTEGER DEFAULT 0')
        except sqlite3.OperationalError:
            pass  # –ö–æ–ª–æ–Ω–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            
        conn.commit()
        conn.close()
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        return False

# User commands
def cmd_info(vk, event):
    return "üìö –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ–µ–∫—Ç–∞:\n‚Ä¢ –ì—Ä—É–ø–ø–∞ –í–ö: vk.com/group\n‚Ä¢ –°–∞–π—Ç: example.com"

def cmd_stats(vk, event):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
    try:
        user_id = event.obj.message['from_id']
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        c.execute('''SELECT COUNT(*) FROM message_history WHERE user_id = ?''', (user_id,))
        messages_count = c.fetchone()[0]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ users
        c.execute('''UPDATE users SET messages_count = ? WHERE user_id = ?''', (messages_count, user_id))
        conn.commit()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        c.execute('''SELECT level, xp, balance, reputation, role, reg_date, invited_count
                    FROM users 
                    WHERE user_id = ?''', (user_id,))
        result = c.fetchone()
        
        if not result:
            return "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
            
        level, xp, balance, reputation, role, reg_date, invited_count = result
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ VK API
        user_info = vk.users.get(user_ids=[user_id], fields=['photo_max_orig'])[0]
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        user_data = {
            'user_id': user_id,
            'level': level,
            'xp': xp,
            'balance': balance,
            'reputation': reputation,
            'role': role,
            'messages': messages_count,
            'reg_date': reg_date,
            'invited_count': invited_count,
            'avatar_url': user_info.get('photo_max_orig')
        }
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        image_path = generate_stats_image(user_data)
        if not image_path:
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
            
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        upload = vk_api.VkUpload(vk)
        photo = upload.photo_messages(image_path)[0]
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º attachment
        attachment = f"photo{photo['owner_id']}_{photo['id']}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        vk.messages.send(
            peer_id=event.obj.message['peer_id'],
            attachment=attachment,
            random_id=get_random_id()
        )
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        try:
            os.remove(image_path)
        except:
            pass
            
        return None
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_getid(vk, event):
    user_id = event.obj.message['from_id']
    return f"üÜî –í–∞—à ID: {user_id}"

def cmd_help(vk, event, args):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    try:
        user_id = event.obj.message['from_id']
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        c.execute('SELECT role FROM users WHERE user_id = ?', (user_id,))
        role = c.fetchone()
        role = role[0] if role else 'user'
        conn.close()
        
        message = "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        message += "üë§ –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        message += "‚Ä¢ /info ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ–µ–∫—Ç–∞\n"
        message += "‚Ä¢ /stats ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n"
        message += "‚Ä¢ /getid ‚Äî —É–∑–Ω–∞—Ç—å —Å–≤–æ–π ID\n"
        message += "‚Ä¢ /profile [ID] ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è\n"
        message += "‚Ä¢ /daily ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞\n"
        message += "‚Ä¢ /marry [ID] ‚Äî –∑–∞–∫–ª—é—á–∏—Ç—å –±—Ä–∞–∫\n"
        message += "‚Ä¢ /divorce ‚Äî —Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å\n"
        message += "‚Ä¢ /rep [ID] [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –ø–æ–≤—ã—Å–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é\n"
        message += "‚Ä¢ /game [–∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞] ‚Äî –∏–≥—Ä–∞\n"
        message += "‚Ä¢ /top [level/messages/balance/rep] ‚Äî —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤\n"
        message += "‚Ä¢ /give [ID] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] ‚Äî –ø–µ—Ä–µ–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã\n"
        message += "‚Ä¢ /nickname [–Ω–∏–∫] ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫\n"
        message += "‚Ä¢ /nlist ‚Äî —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∫–∞–º–∏\n"
        message += "‚Ä¢ /achievements ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
        
        message += "üéÆ –ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        message += "‚Ä¢ /slots [—Å—Ç–∞–≤–∫–∞] ‚Äî –∏–≥—Ä–æ–≤—ã–µ –∞–≤—Ç–æ–º–∞—Ç—ã\n"
        message += "‚Ä¢ /duel [ID] [—Å—Ç–∞–≤–∫–∞] ‚Äî –¥—É—ç–ª—å\n"
        message += "‚Ä¢ /wheel [—Å—Ç–∞–≤–∫–∞] [red/black/green] ‚Äî —Ä—É–ª–µ—Ç–∫–∞\n"
        message += "‚Ä¢ /flip [—Å—Ç–∞–≤–∫–∞] [heads/tails] ‚Äî –º–æ–Ω–µ—Ç–∫–∞\n"
        message += "‚Ä¢ /dice [—Å—Ç–∞–≤–∫–∞] ‚Äî –∫–æ—Å—Ç–∏\n"
        message += "‚Ä¢ /roulette ‚Äî —Ä—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞\n"
        message += "‚Ä¢ /blackjack [—Å—Ç–∞–≤–∫–∞] ‚Äî –±–ª—ç–∫–¥–∂–µ–∫\n"
        message += "‚Ä¢ /lottery [–∫–æ–ª-–≤–æ –±–∏–ª–µ—Ç–æ–≤] ‚Äî –ª–æ—Ç–µ—Ä–µ—è\n"
        message += "‚Ä¢ /numbers [—á–∏—Å–ª–æ] [—Å—Ç–∞–≤–∫–∞] ‚Äî —É–≥–∞–¥–∞–π —á–∏—Å–ª–æ\n\n"
        
        message += "üõ† –£—Ç–∏–ª–∏—Ç—ã:\n"
        message += "‚Ä¢ /weather [–≥–æ—Ä–æ–¥] ‚Äî –ø–æ–≥–æ–¥–∞\n"
        message += "‚Ä¢ /rates ‚Äî –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n"
        
        if role in ['moderator', 'senior_moderator', 'admin']:
            message += "\nüëÆ –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n"
            message += "‚Ä¢ /kick [ID] ‚Äî –∫–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            message += "‚Ä¢ /mute [ID] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –º—É—Ç\n"
            message += "‚Ä¢ /unmute [ID] ‚Äî —Ä–∞–∑–º—É—Ç\n"
            message += "‚Ä¢ /warn [ID] [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –≤–∞—Ä–Ω\n"
            message += "‚Ä¢ /unwarn [ID] ‚Äî —Å–Ω—è—Ç—å –≤–∞—Ä–Ω\n"
            message += "‚Ä¢ /getban [ID] ‚Äî –∏–Ω—Ñ–æ –æ –±–∞–Ω–∞—Ö\n"
            message += "‚Ä¢ /getwarn [ID] ‚Äî –∏–Ω—Ñ–æ –æ –≤–∞—Ä–Ω–∞—Ö\n"
            message += "‚Ä¢ /warnhistory [ID] ‚Äî –∏—Å—Ç–æ—Ä–∏—è –≤–∞—Ä–Ω–æ–≤\n"
            message += "‚Ä¢ /staff ‚Äî —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞\n"
        
        if role in ['senior_moderator', 'admin']:
            message += "\nüî® –ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—à–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n"
            message += "‚Ä¢ /ban [ID] [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –±–∞–Ω\n"
            message += "‚Ä¢ /unban [ID] ‚Äî —Ä–∞–∑–±–∞–Ω\n"
            message += "‚Ä¢ /addmoder [ID] ‚Äî –Ω–∞–∑–Ω–∞—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞\n"
            message += "‚Ä¢ /removerole [ID] ‚Äî —Å–Ω—è—Ç—å —Ä–æ–ª—å\n"
            message += "‚Ä¢ /zov ‚Äî –ø—Ä–∏–∑–≤–∞—Ç—å –≤—Å–µ—Ö\n"
            message += "‚Ä¢ /online ‚Äî —Å–ø–∏—Å–æ–∫ –æ–Ω–ª–∞–π–Ω\n"
            message += "‚Ä¢ /banlist ‚Äî —Å–ø–∏—Å–æ–∫ –±–∞–Ω–æ–≤\n"
            message += "‚Ä¢ /onlinelist ‚Äî –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ–Ω–ª–∞–π–Ω\n"
        
        if role == 'admin':
            message += "\nüëë –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
            message += "‚Ä¢ /skick [ID] [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –∫–∏–∫ —Å–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥\n"
            message += "‚Ä¢ /quiet [–≤—Ä–µ–º—è] ‚Äî —Ä–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã\n"
            message += "‚Ä¢ /sban [ID] [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –±–∞–Ω –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö\n"
            message += "‚Ä¢ /sunban [ID] ‚Äî —Ä–∞–∑–±–∞–Ω –≤–æ –≤—Å–µ—Ö –±–µ—Å–µ–¥–∞—Ö\n"
            message += "‚Ä¢ /addsenmoder [ID] ‚Äî –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç.–º–æ–¥–µ—Ä–∞\n"
            message += "‚Ä¢ /addadmin [ID] ‚Äî –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
            message += "‚Ä¢ /removeadmin [ID] ‚Äî —Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
            message += "‚Ä¢ /massban [ID1] [ID2] ... [–ø—Ä–∏—á–∏–Ω–∞] ‚Äî –º–∞—Å—Å–æ–≤—ã–π –±–∞–Ω\n"
            message += "‚Ä¢ /unbanall ‚Äî —Ä–∞–∑–±–∞–Ω–∏—Ç—å –≤—Å–µ—Ö –≤ –±–µ—Å–µ–¥–µ\n"
            message += "‚Ä¢ /clearwarns [ID] ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n"
            message += "‚Ä¢ /resetstats [ID] ‚Äî —Å–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            message += "‚Ä¢ /adminlist ‚Äî —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n"
            message += "‚Ä¢ /bug [–æ–ø–∏—Å–∞–Ω–∏–µ] ‚Äî —Å–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ\n"
            message += "‚Ä¢ /settings [–ø–∞—Ä–∞–º–µ—Ç—Ä] [–∑–Ω–∞—á–µ–Ω–∏–µ] ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã\n"
            message += "‚Ä¢ /snick [ID] [–Ω–∏–∫] ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
            message += "‚Ä¢ /givemoney [ID] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] ‚Äî –≤—ã–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
            message += "\n‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ—Å–µ–¥–æ–π:\n"
            message += "‚Ä¢ /filter [add/remove/list] [—Å–ª–æ–≤–æ] ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–º —Å–ª–æ–≤\n"
            message += "‚Ä¢ /pin ‚Äî –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ—Ç–≤–µ—Ç–æ–º)\n"
            message += "‚Ä¢ /export ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –±–µ—Å–µ–¥—ã\n"
            message += "‚Ä¢ /welcome [set/clear/show] ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º\n"
            message += "‚Ä¢ /backup [create/list/restore] ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏\n"
            message += "‚Ä¢ /automod [status/spam/caps/links/warns/action] ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏\n"
        
        return message
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ help: {str(e)}", exc_info=True)
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

# Moderator commands
def cmd_kick(vk, event, args):
    if not is_moderator(event.obj.message['from_id']):
        return "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã"
    
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    try:
        target = ' '.join(args)
        user_id = extract_user_id(vk, target)
        
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        vk.messages.removeChatUser(
            chat_id=event.chat_id,
            user_id=user_id
        )
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @id{user_id} ({user_info['first_name']}) –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ—Å–µ–¥—ã"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def is_moderator(user_id):
    conn = sqlite3.connect('bot.db')
    c = conn.cursor()
    c.execute('SELECT role FROM users WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    conn.close()
    return result and result[0] in ['moderator', 'senior_moderator', 'admin']

def is_senior_moderator(user_id):
    conn = sqlite3.connect('bot.db')
    c = conn.cursor()
    c.execute('SELECT role FROM users WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    conn.close()
    return result and result[0] in ['senior_moderator', 'admin']

def is_admin(user_id):
    conn = sqlite3.connect('bot.db')
    c = conn.cursor()
    c.execute('SELECT role FROM users WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    conn.close()
    return result and result[0] == 'admin'

# Add XP and check level up
def add_xp(vk, event, user_id, xp_amount):
    conn = sqlite3.connect('bot.db')
    c = conn.cursor()
    
    # Get current XP and level
    c.execute('SELECT xp, level FROM users WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    
    if result:
        current_xp, current_level = result
        new_xp = current_xp + xp_amount
        
        # Calculate new level (each level requires level * 1000 XP)
        new_level = current_level
        while new_xp >= new_level * 1000:
            new_xp -= new_level * 1000
            new_level += 1
        
        # Update user data
        c.execute('''UPDATE users 
                    SET xp = ?, level = ?
                    WHERE user_id = ?''', (new_xp, new_level, user_id))
        
        conn.commit()
        conn.close()
        
        return new_level > current_level
    else:
        # Create new user entry and check if this is the first user
        c.execute('SELECT COUNT(*) FROM users')
        user_count = c.fetchone()[0]
        
        # If this is the first user, make them admin
        role = 'admin' if user_count == 0 else 'user'
        
        c.execute('''INSERT INTO users (user_id, xp, level, role) 
                    VALUES (?, ?, 1, ?)''', (user_id, xp_amount, role))
        
        conn.commit()
        
        if role == 'admin':
            vk.messages.send(
                chat_id=event.chat_id,
                message=f"üëë @id{user_id}, –≤—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ –∫–∞–∫ –ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!",
                random_id=get_random_id()
            )
        
        conn.close()
        return False

def get_user_role(user_id):
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = sqlite3.connect('bot.db')
    c = conn.cursor()
    c.execute('SELECT role FROM users WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    conn.close()
    return result[0] if result else 'user'

def is_quiet_mode(chat_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ä–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –≤ —á–∞—Ç–µ"""
    try:
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        c.execute('''SELECT quiet_mode, quiet_end 
                    FROM chat_settings 
                    WHERE chat_id = ?''', (chat_id,))
        result = c.fetchone()
        conn.close()
        
        if result:
            quiet_mode, quiet_end = result
            if quiet_mode:
                if quiet_end:
                    quiet_end = datetime.strptime(quiet_end, '%Y-%m-%d %H:%M:%S.%f')
                    if quiet_end > datetime.now():
                        return True
                    else:
                        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
                        conn = sqlite3.connect('bot.db')
                        c = conn.cursor()
                        c.execute('''UPDATE chat_settings 
                                   SET quiet_mode = 0, quiet_end = NULL 
                                   WHERE chat_id = ?''', (chat_id,))
                        conn.commit()
                        conn.close()
                        return False
                return True
        return False
    except Exception:
        return False

def cmd_snick(vk, event, args):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∏–∫–∞ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    if not is_admin(event.obj.message['from_id']):
        return "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        
    if not args or len(args) < 2:
        return "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /snick [ID] [–Ω–∏–∫]"
    
    try:
        target = args[0]
        nickname = ' '.join(args[1:])
        
        user_id = extract_user_id(vk, target)
        if not user_id:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            
        if len(nickname) > 20:
            return "‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞: 20 —Å–∏–º–≤–æ–ª–æ–≤"
        
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∏–∫
        c.execute('UPDATE users SET nickname = ? WHERE user_id = ?', (nickname, user_id))
        
        conn.commit()
        conn.close()
        
        user_info = vk.users.get(user_ids=[user_id])[0]
        return f"üè∑ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∏–∫ –¥–ª—è @id{user_id} ({user_info['first_name']}): {nickname}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_nlist(vk, event):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö –Ω–∏–∫–∞–º–∏"""
    try:
        conn = sqlite3.connect('bot.db')
        c = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∫–∞–º–∏
        c.execute('''SELECT user_id, nickname 
                    FROM users 
                    WHERE nickname IS NOT NULL 
                    ORDER BY nickname''')
        users = c.fetchall()
        conn.close()
        
        if not users:
            return "üìã –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∏–∫–∞–º–∏"
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö —á–µ—Ä–µ–∑ VK API
        user_ids = [user[0] for user in users]
        users_info = vk.users.get(user_ids=user_ids)
        users_dict = {user['id']: user for user in users_info}
        
        message = "üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∫–∞–º–∏:\n\n"
        for user_id, nickname in users:
            user = users_dict.get(user_id, {'first_name': 'Unknown', 'last_name': 'User'})
            message += f"‚Ä¢ @id{user_id} ({user['first_name']} {user['last_name']}) ‚Äî {nickname}\n"
        
        return message
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"

def cmd_music(vk, event, args):
    """–ò—â–µ—Ç –º—É–∑—ã–∫—É –≤ VK –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç"""
    if not args:
        return "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è"
    
    query = ' '.join(args)
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ audio.search –¥–ª—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏
        response = vk.audio.search(q=query, count=1)
        if response['count'] > 0:
            audio = response['items'][0]
            artist = audio['artist']
            title = audio['title']
            url = audio['url']
            return f"üéµ {artist} - {title}\n{url}"
        else:
            return "‚ùå –ú—É–∑—ã–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏: {str(e)}"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        init_db()
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if not update_database():
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK
        vk_session, vk, longpoll = init_vk()
        
        # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
        cleanup_thread = threading.Thread(target=schedule_cleanup, daemon=True)
        cleanup_thread.start()
        
        # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        if create_backup():
            logger.info("–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")
        else:
            logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        for event in longpoll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW and event.from_chat:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
                message = event.obj.message
                user_id = message['from_id']
                chat_id = event.chat_id
                text = message['text'].lower()
                
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if 'action' in message and message['action']['type'] == 'chat_invite_user':
                        invited_user_id = message['action']['member_id']
                        # –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –≤–µ—Ä–Ω—É–ª—Å—è –≤ –±–µ—Å–µ–¥—É
                        if invited_user_id != user_id:
                            conn = sqlite3.connect('bot.db')
                            c = conn.cursor()
                            c.execute('''UPDATE users 
                                       SET invited_count = invited_count + 1 
                                       WHERE user_id = ?''', (user_id,))
                            conn.commit()
                            conn.close()
                        continue

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º
                    is_spam, spam_reason = antispam.is_message_spam(user_id, text)
                    if is_spam:
                        spam_message = antispam.handle_spam(vk, chat_id, user_id, spam_reason)
                        if spam_message:
                            vk.messages.send(
                                chat_id=chat_id,
                                message=spam_message,
                                random_id=get_random_id()
                            )
                        continue
                    
                    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–¥–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
                    conn = sqlite3.connect('bot.db')
                    c = conn.cursor()
                    
                    try:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        c.execute('SELECT 1 FROM users WHERE user_id = ?', (user_id,))
                        if not c.fetchone():
                            c.execute('''INSERT INTO users 
                                        (user_id, messages_count, reg_date) 
                                        VALUES (?, 0, ?)''', 
                                        (user_id, datetime.now()))
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–æ –ª–∏ —Ç–∞–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥
                        five_seconds_ago = datetime.now() - timedelta(seconds=5)
                        c.execute('''SELECT 1 FROM message_history 
                                    WHERE user_id = ? AND chat_id = ? 
                                    AND timestamp > ?''', 
                                    (user_id, chat_id, five_seconds_ago))
                        
                        if not c.fetchone():
                            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
                            current_time = datetime.now()
                            c.execute('''INSERT INTO message_history 
                                        (user_id, chat_id, message_type, timestamp)
                                        VALUES (?, ?, ?, ?)''', 
                                        (user_id, chat_id, 'text', current_time))
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                            c.execute('''UPDATE users 
                                        SET last_activity = ? 
                                        WHERE user_id = ?''', 
                                        (current_time, user_id))
                        
                        conn.commit()
                    except Exception as e:
                        conn.rollback()
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}", exc_info=True)
                    finally:
                        conn.close()
                    
                    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞
                    if text.startswith('/'):
                        command = text.split()[0][1:]
                        args = text.split()[1:] if len(text.split()) > 1 else []
                        log_command(user_id, chat_id, command, args)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã –∏ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if is_quiet_mode(chat_id):
                        user_role = get_user_role(user_id)
                        if user_role not in ['admin', 'senior_moderator', 'moderator']:
                            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            try:
                                vk.messages.delete(
                                    peer_id=2000000000 + chat_id,
                                    conversation_message_ids=[event.obj.message['conversation_message_id']],
                                    delete_for_all=1
                                )
                                continue
                            except:
                                pass
                    
                    # Add XP for message (if not a command)
                    if not text.startswith('/'):
                        if add_xp(vk, event, user_id, 10):  # Pass event object here
                            vk.messages.send(
                                chat_id=chat_id,
                                message=f"üéâ @id{user_id}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–≤—ã—à–µ–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è!",
                                random_id=get_random_id()
                            )
                    
                    if text.startswith('/'):
                        command = text.split()[0][1:]
                        args = text.split()[1:] if len(text.split()) > 1 else []
                        
                        # User commands
                        if command == 'help':
                            response = cmd_help(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'info':
                            response = cmd_info(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'stats':
                            response = cmd_stats(vk, event)
                            if response:  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'getid':
                            response = cmd_getid(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        
                        # Fun commands
                        elif command == 'profile':
                            response = cmd_profile(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'daily':
                            response = cmd_daily(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'marry':
                            response = cmd_marry(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'divorce':
                            response = cmd_divorce(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'rep':
                            response = cmd_rep(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'game':
                            response = cmd_game(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'top':
                            response = cmd_top(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        
                        # Game commands
                        elif command == 'slots':
                            response = cmd_slots(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'duel':
                            response = cmd_duel(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'wheel':
                            response = cmd_wheel(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'flip':
                            response = cmd_flip(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'dice':
                            response = cmd_dice(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'roulette':
                            response = cmd_russian_roulette(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'blackjack':
                            response = cmd_blackjack(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'lottery':
                            response = cmd_lottery(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'numbers':
                            response = cmd_numbers(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'jackpot':
                            response = cmd_jackpot(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'poker':
                            response = cmd_poker(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'tournament':
                            response = cmd_tournament(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'baccarat':
                            response = cmd_baccarat(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'crash':
                            response = cmd_crash(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'mines':
                            response = cmd_mines(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        
                        # Utility commands
                        elif command == 'weather':
                            if not args:
                                response = "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥"
                            else:
                                city = ' '.join(args)
                                weather = get_weather(city)
                                if weather:
                                    response = (f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                                              f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['temp']}¬∞C\n"
                                              f"üå° –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather['feels_like']}¬∞C\n"
                                              f"üí® –í–µ—Ç–µ—Ä: {weather['wind_speed']} –º/—Å\n"
                                              f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['humidity']}%\n"
                                              f"üìù {weather['description'].capitalize()}")
                                else:
                                    response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É"
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        
                        elif command == 'rates':
                            rates = get_currency_rates()
                            if rates:
                                response = (f"üí∞ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:\n"
                                          f"üíµ USD: {rates['USD']} ‚ÇΩ\n"
                                          f"üí∂ EUR: {rates['EUR']} ‚ÇΩ")
                            else:
                                response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        
                        # Moderator commands
                        elif command == 'kick':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_kick(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'mute':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_mute(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'unmute':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_unmute(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'warn':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_warn(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'unwarn':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_unwarn(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'getban':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_getban(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'getwarn':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_getwarn(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'warnhistory':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_warnhistory(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'staff':
                            if is_moderator(event.obj.message['from_id']):
                                response = cmd_staff(vk, event)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        
                        # Senior moderator commands
                        elif command == 'ban':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_ban(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'unban':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_unban(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'addmoder':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_addmoder(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'removerole':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_removerole(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'zov':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_zov(vk, event)
                                if response:  # Send if there's a message
                                    vk.messages.send(
                                        chat_id=chat_id,
                                        message=response,
                                        random_id=get_random_id()
                                    )
                        elif command == 'online':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_online(vk, event)
                                if response:  # Send if there's a message
                                    vk.messages.send(
                                        chat_id=chat_id,
                                        message=response,
                                        random_id=get_random_id()
                                    )
                        elif command == 'banlist':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_banlist(vk, event)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'onlinelist':
                            if is_senior_moderator(event.obj.message['from_id']):
                                response = cmd_onlinelist(vk, event)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        
                        # Admin commands
                        elif command == 'skick':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_skick(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'quiet':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_quiet(vk, event, args)
                                if response:  # Send if there's a message
                                    vk.messages.send(
                                        chat_id=chat_id,
                                        message=response,
                                        random_id=get_random_id()
                                    )
                        elif command == 'sban':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_sban(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'sunban':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_sunban(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'addsenmoder':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_addsenmoder(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'bug':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_bug(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'stats_chat':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_stats_chat(vk, event)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'settings':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_settings(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'addadmin':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_addadmin(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'removeadmin':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_removeadmin(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'massban':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_massban(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'unbanall':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_unbanall(vk, event)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'clearwarns':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_clear_warns(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'resetstats':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_reset_stats(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'adminlist':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_admin_list(vk, event)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'give':
                            response = cmd_give(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'nickname':
                            response = cmd_nickname(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'snick':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_snick(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'nlist':
                            response = cmd_nlist(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'achievements':
                            response = cmd_achievements(vk, event)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'music':
                            response = cmd_music(vk, event, args)
                            vk.messages.send(
                                chat_id=chat_id,
                                message=response,
                                random_id=get_random_id()
                            )
                        elif command == 'resetmessages':
                            if is_admin(event.obj.message['from_id']):
                                try:
                                    conn = sqlite3.connect('bot.db')
                                    c = conn.cursor()
                                    c.execute('UPDATE users SET messages_count = 0')
                                    c.execute('DELETE FROM message_history')
                                    conn.commit()
                                    conn.close()
                                    response = "‚úÖ –°—á–µ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–±—Ä–æ—à–µ–Ω—ã"
                                except Exception as e:
                                    response = f"‚ùå –û—à–∏–±–∫–∞: {str(e)}"
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'givemoney':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_givemoney(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'filter':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_filter(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'pin':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_pin(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'export':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_export(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'welcome':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_welcome(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'backup':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_backup(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        elif command == 'automod':
                            if is_admin(event.obj.message['from_id']):
                                response = cmd_automod(vk, event, args)
                                vk.messages.send(
                                    chat_id=chat_id,
                                    message=response,
                                    random_id=get_random_id()
                                )
                        
                except Exception as e:
                    error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}"
                    log_error(error_msg, exc_info=True)
                    vk.messages.send(
                        chat_id=chat_id,
                        message="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã",
                        random_id=get_random_id()
                    )
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}", exc_info=True)
        sys.exit(1)

if __name__ == "__main__":
    main() 